import { TextInputProps } from 'react-native';
import Animated from 'react-native-reanimated';

export interface InputProps extends TextInputProps {
  name: string;
  icon?: string;
  mask?: 'cep' | 'phone' | 'currency' | 'date' | 'cpf';
  inputMaskChange?: any;
}
export interface InputValueReference {
  value: string;
}
export interface InputRef {
  focus(): void;
}

export interface ContainerProps {
  isFocused: boolean;
  isErrored: boolean;
}

export interface Client {
  __v: number;
  _id: string;
  ativo: boolean;
  bairro: string;
  cep: string;
  cidade: string;
  cnpj: string;
  complemento: string;
  email: string;
  endereco: string;
  incEst: string;
  nome: string;
  razaoSocial: string;
  uf: string;
  unidadesCons: string[];
  usinas: string[];
}

export interface TypeUser {
  __v: number;
  _id: string;
  perfil: string;
  role: number;
}

export interface User {
  id: string;
  name: string;
  email: string;
  __v: number;
  _id: string;
  ativo: boolean;
  autoGeneratedPassw: boolean;
  cliente: Client;
  tipoUsuario: TypeUser;
}

export interface AuthState {
  token: string;
  user: User;
}

export interface SignInCredentials {
  email: string;
  password: string;
}

export interface RTPagination {
  __v: number;
  _id: string;
  potencia: number;
  timeStamp: string;
  totalGerado: number;
  usina: string;
}

export interface LastDaysProps {
  __v: number;
  _id: string;
  ano: number;
  dia: number;
  mes: number;
  totalGerado: number;
  usina: string;
}

export interface LastDaysGraphicProps {
  data: LastDaysProps[];
}

export interface RealTimeGraphicProps {
  data: RTPagination[];
}

export interface AuthContextData {
  user: User;
  loading: boolean;
  signIn(credentials: SignInCredentials): Promise<void>;
  signOut(): void;
}

export interface AuthProviderProps {
  children: React.ReactNode;
}

export interface AppProviderProps {
  children: React.ReactNode;
}

export interface DrawerStyleProps {
  drawerAnimationStyle: DrawerProps;
}

export interface DrawerProps {
  borderRadius: Animated.Node<number>;
  transform: {
    scale: Animated.Node<number>;
  }[];
}
